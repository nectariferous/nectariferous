name: Metrics and Snake Animation

on:
  # Schedule daily updates
  schedule: [{cron: "0 0 * * *"}]
  # Allows to manually run the job at any time
  workflow_dispatch:
  # Run on every push on the master/main branch
  push: {branches: ["master", "main"]}

jobs:
  generate-metrics:
    runs-on: ubuntu-latest
    environment: 
      name: production
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      - name: Generate Metrics
        uses: lowlighter/metrics@latest
        with:
          token: ${{ secrets.METRICS_TOKEN }}
          base: ""
          plugin_sponsorships: yes
          plugin_sponsorships_sections: amount,sponsorships
          plugin_sponsorships_size: 24
          config_display: columns
          
      - name: Commit and push changes
        run: |
          git config --local user.email "likhonexe@gmail.com"
          git config --local user.name "nectariferous"
          git add -A
          git commit -m "Updated metrics"
          git push

  generate-snake:
    runs-on: ubuntu-latest
    needs: generate-metrics
    timeout-minutes: 10
    
    steps:
      # Generates a snake game from a github user (<github_user_name>) contributions graph, output a svg animation at <svg_out_path>
      - name: Generate GitHub Contribution Grid Snake
        uses: Platane/snk/svg-only@v3
        with:
          github_user_name: nectariferous
          outputs: |
            dist/only-svg/github-contribution-grid-snake.svg
            dist/only-svg/github-contribution-grid-snake-dark.svg?palette=github-dark
      
      # Push the content of <build_dir> to a branch
      # The content will be available at https://raw.githubusercontent.com/<github_user>/<repository>/<target_branch>/<file> , or as github page
      - name: Push GitHub Contribution Grid Snake to the output branch
        uses: crazy-max/ghaction-github-pages@v2.6.0
        with:
          target_branch: output
          build_dir: dist
        env:
          GITHUB_TOKEN: ${{ secrets.METRICS_TOKEN }}
